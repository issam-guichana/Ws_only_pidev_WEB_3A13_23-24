{% extends 'admin.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
{% endblock %}

{% block content %}
<div class="page-content">
    <div class="title-container">
        <h2 class="form-title"><i class="fas fa-lightbulb" style="margin-right: 10px;"></i>Discussions sur Formini.TN</h2>
    </div>
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Nom Room</th>
                <th scope="col">Description</th>
                <th scope="col">Date creation</th>
                 <th scope="col">Formation</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for room in rooms %}
                <tr>
                    <td>{{ room.nomRoom }}</td>
                    <td>{{ room.description }}</td>
                    <td>{{ room.dateCRoom|date('Y-m-d') }}</td>
                      <td>{{ room.dateCRoom|date('Y-m-d') }}</td>
                    <td>
                        <a href="{{ path('app_room_d', {'id': room.IdRoom }) }}" class="btn btn-primary consulter-btn" data-room-id="{{ room.IdRoom }}" data-toggle="modal" data-target="#messagesModal">Messages</a>
                        <a href="{{ path('updateroom', {'id': room.IdRoom }) }}" class="btn btn-primary editer-btn" data-room-id="{{ room.IdRoom }}" data-toggle="modal" data-target="#updateModal">Editer</a>
                        <a href="{{ path('deleteroom', {'id': room.IdRoom }) }}" class="btn btn-primary delete-btn" data-room-id="{{ room.IdRoom }}" onclick="confirmDelete('{{ room.IdRoom }}')">Supprimer</a>
                        <a href="{{ path('suspend_room', {'id': room.IdRoom }) }}" class="btn btn-primary delete-btn" data-room-id="{{ room.IdRoom }}" id="suspendRoomBtn">Suspendre</a>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const suspendBtn = document.getElementById('suspendRoomBtn');
        suspendBtn.addEventListener('click', function(event) {
            event.preventDefault();
            const roomId = suspendBtn.getAttribute('data-room-id');
            suspendRoom(roomId);
        });

        function suspendRoom(roomId) {
            // Send AJAX request to suspend the room
            const url = '/suspend/room/' + roomId;
            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                // Update the modal or UI based on the response
                // For example, close the modal or update a status message
                console.log(data.message); // Log the response message
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
    });
</script>


<!-- Modal for displaying messages -->
<!-- Modal for displaying messages -->
<div class="modal fade" id="messagesModal" tabindex="-1" role="dialog" aria-labelledby="messagesModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="messagesModalLabel">Messages</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Chat UI -->
                <div class="chat-container">
                    <ul class="messages" id="messagesList">
                        <!-- Messages will be displayed here -->
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Modal for updating room details -->
<div class="modal fade" id="updateModal" tabindex="-1" role="dialog" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Update Room Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Form for updating room details -->
                <form id="updateForm" action="" method="post">
                    <!-- Update the action attribute with the correct route and room ID dynamically -->
                    <!-- Include form fields for updating room details -->
                    <!-- Example: -->
                    <div class="form-group">
                        <label for="roomName">Room Name</label>
                        <input type="text" class="form-control" id="roomName" name="roomName">
                    </div>
                    <div class="form-group">
                        <label for="description">Description</label>
                        <textarea class="form-control" id="description" name="description"></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Update</button>
                </form>
            </div>
        </div>
    </div>
</div>


{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- Ensure jQuery is loaded before your custom JavaScript code -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script>
    $(document).ready(function(){
        $('.update-btn').click(function(){
            var roomId = $(this).data('room-id');
            var roomName = $(this).data('room-name');
            var description = $(this).data('description');
            
            // Update form action attribute with the correct route and room ID
            var formAction = "{{ path('updateroom', {'id': '__roomId__'}) }}".replace('__roomId__', roomId);
            $('#updateForm').attr('action', formAction);
            
            // Populate form fields with room details
            $('#roomName').val(roomName);
            $('#description').val(description);
            
            // Show the modal
            $('#updateModal').modal('show');
        });
    });
</script>
<script>
    function confirmDelete(roomId) {
        // Display a confirmation dialog
        if (confirm("Attention! La suppression de cette discussion invoquera la suppression de tous les messages")) {
            // If user confirms, redirect to the delete route
            window.location.href = "{{ path('deleteroom', {'id': 'ROOM_ID'}) }}".replace('ROOM_ID', roomId);
        } else {
            window.location.reload();
        }
    }
</script>
   <script>
    $(document).ready(function() {
        // Event listener for Consulter button
        $('.consulter-btn').click(function(event) {
            event.preventDefault(); // Prevent default anchor behavior

            // Assuming you have a variable containing the room ID
            var roomId = $(this).data('room-id');

            // Fetch messages data for the room
            $.get('{{ path('app_room_d', {'id': '__roomId__'}) }}'.replace('__roomId__', roomId), function(response) {
                // Update modal content with messages
                var messages = response.messages;
                var messagesList = $('#messagesList');
                messagesList.empty(); // Clear previous messages

                messages.forEach(function(message) {
                    
                    // Create list item for the message
                    console.log(message);
                    var listItem = $('<li>').text(message.contenu); // Assuming the content property of the message entity

                    // Create delete button for the message
                    var deleteButton = $('<button>').addClass('btn btn-danger delete-message').text('Supprimer');
                    deleteButton.data('message-id', message.idMsg); // Set data attribute for message ID
                     console.log("Message ID:", message.idMsg);

                    // Append the delete button to the list item
                    listItem.append(deleteButton);

                    // Append the list item to the messages list
                    messagesList.append(listItem);
                });

                // Show the modal
                $('#messagesModal').modal('show');
            }).fail(function(jqXHR, textStatus, errorThrown) {
                // Handle errors here
                console.error("Error:", textStatus, errorThrown);
            });
        });

        // Event listener for delete message button
        $('#messagesList').on('click', '.delete-message', function() {
            // Retrieve the message ID from the data attribute of the delete button
            var messageId = $(this).data('message-id');

            // Check if message ID is available
            if (typeof messageId !== 'undefined') {
                // Perform AJAX request to delete the message
                $.ajax({
                    url: '{{ path('deletemsg', {'id': '__messageId__'}) }}'.replace('__messageId__', messageId),
                    type: 'DELETE',
                    success: function(response) {
                        // Handle success response (e.g., remove the message from UI)
                        console.log('Message deleted successfully:', response);
                        // Refresh the messages list
                        $('.consulter-btn').trigger('click');
                    },
                    error: function(xhr, status, error) {
                        // Handle error response
                        console.error("Error:", xhr.responseText);
                    }
                });
            } else {
                console.error("Message ID is undefined.");
            }
        });
    });



    <style>
    .chat-container {
            max-width: 600px;
            margin: 20px auto;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 20px;
        }
        .messages {
            max-height: 400px;
            overflow-y: scroll;
        }
        .message {
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
        }
        .message.me {
            background-color: #DCF8C6;
            align-self: flex-end;
        }
        .message.other {
            background-color: #E8E8E8;
            align-self: flex-start;
        }
        .message-body {
            word-wrap: break-word;
        }
.page-content {
        font-family: Georgia, serif; /* Apply font-family to page content */
    }

title-container {
            text-align: center; /* Center the title */
            margin-bottom: 40px; /* Add some space below the title */
        }
/* Modal styles */
.modal {
     width:50%;
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.4); /* Semi-transparent black background */
}

.modal-content {
  background-color: #fefefe; /* White background */
  margin: 15% auto;
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
  border-radius: 10px; /* Rounded corners */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Drop shadow */
}

.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}

/* Card styles */
.card {
   
  border: 1px solid #ccc; /* Card border */
  border-radius: 10px; /* Rounded corners */
  margin-bottom: 20px; /* Spacing between cards */
}

.card-header {
 background-color: #213E60;  /* Card header background color */
  padding: 10px;
  border-bottom: 1px solid #ccc; /* Border bottom */
}

.card-title {
  margin-bottom: 0;
  /* Remove margin bottom for card title */
}

</style>

 

    <script>
        // Display FlashyNotifier success message
        Flashy.success("Room suspendu avec succès");
    </script>



{% endblock %}